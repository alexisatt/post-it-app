{"ast":null,"code":"var _jsxFileName = \"/Users/alexisattardo/Desktop/post-it-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NoteList from \"./components/NoteList\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"Make sure to schedule dentist appointment\",\n    date: \"11/04/2022\"\n  }, {\n    id: nanoid(),\n    text: \"Ski trip planned for 11/18\",\n    date: \"11/05/2022\"\n  }, {\n    id: nanoid(),\n    text: \"Dont forget to watch the new season of Survivor\",\n    date: \"01/07/2023\"\n  }, {\n    id: nanoid(),\n    text: \"There is a sale at Saks Fifth Ave on Feb 22nd\",\n    date: \"02/07/2023\"\n  }]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"posting-app\"));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"posting-app\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = id => {\n    //delete note that is equal to the id we select. so only delete THAT note\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && \"dark-mode\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"sPWLYOQ7+CFzZfAueRtBbWKRuz4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","nanoid","NoteList","Header","Search","App","notes","setNotes","id","text","date","searchText","setSearchText","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","toLowerCase","includes"],"sources":["/Users/alexisattardo/Desktop/post-it-app/src/App.js"],"sourcesContent":["\nimport React,{useState, useEffect} from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NoteList from \"./components/NoteList\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\n\nfunction App() {\n  const [notes, setNotes] =useState([\n    {\n    id: nanoid(),\n    text: \"Make sure to schedule dentist appointment\",\n    date: \"11/04/2022\",\n    },\n    {\n      id: nanoid(),\n      text: \"Ski trip planned for 11/18\",\n      date: \"11/05/2022\",\n    },\n    {\n        id: nanoid(),\n        text: \"Dont forget to watch the new season of Survivor\",\n        date: \"01/07/2023\",\n    },\n    {\n      id: nanoid(),\n      text: \"There is a sale at Saks Fifth Ave on Feb 22nd\",\n      date: \"02/07/2023\",\n  },\n  ]);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"posting-app\"));\n    if(savedNotes){\n      setNotes(savedNotes);\n    }\n  },[]);\n\n  useEffect(()=> {\n    localStorage.setItem(\"posting-app\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (text) => {\n    const date =  new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    }\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes)\n  }\nconst deleteNote = (id) => {\n  //delete note that is equal to the id we select. so only delete THAT note\n  const newNotes = notes.filter((note)=> note.id !== id)\n  setNotes(newNotes);\n}\n  return (\n\n<div className={ `${darkMode && \"dark-mode\"}`}>\n  <div className=\"container\">\n    <Header handleToggleDarkMode={setDarkMode} />\n    <Search handleSearchNote={setSearchText} />\n    <NoteList \n    notes={notes.filter((note) => \n      note.text.toLowerCase().includes(searchText)\n    )} \n      handleAddNote={addNote}\n      handleDeleteNote={deleteNote}\n      />\n  </div>\n\n</div>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,CAAC,CAChC;IACAS,EAAE,EAAEP,MAAM,EADV;IAEAQ,IAAI,EAAE,2CAFN;IAGAC,IAAI,EAAE;EAHN,CADgC,EAMhC;IACEF,EAAE,EAAEP,MAAM,EADZ;IAEEQ,IAAI,EAAE,4BAFR;IAGEC,IAAI,EAAE;EAHR,CANgC,EAWhC;IACIF,EAAE,EAAEP,MAAM,EADd;IAEIQ,IAAI,EAAE,iDAFV;IAGIC,IAAI,EAAE;EAHV,CAXgC,EAgBhC;IACEF,EAAE,EAAEP,MAAM,EADZ;IAEEQ,IAAI,EAAE,+CAFR;IAGEC,IAAI,EAAE;EAHR,CAhBgC,CAAD,CAAjC;EAuBA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAnB;;IACA,IAAGJ,UAAH,EAAc;MACZR,QAAQ,CAACQ,UAAD,CAAR;IACD;EACF,CALQ,EAKP,EALO,CAAT;EAOAf,SAAS,CAAC,MAAK;IACbkB,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAoCJ,IAAI,CAACK,SAAL,CAAef,KAAf,CAApC;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;EAIA,MAAMgB,OAAO,GAAIb,IAAD,IAAU;IACxB,MAAMC,IAAI,GAAI,IAAIa,IAAJ,EAAd;IACA,MAAMC,OAAO,GAAG;MACdhB,EAAE,EAAEP,MAAM,EADI;MAEdQ,IAAI,EAAEA,IAFQ;MAGdC,IAAI,EAAEA,IAAI,CAACe,kBAAL;IAHQ,CAAhB;IAKA,MAAMC,QAAQ,GAAG,CAAC,GAAGpB,KAAJ,EAAWkB,OAAX,CAAjB;IACAjB,QAAQ,CAACmB,QAAD,CAAR;EACD,CATD;;EAUF,MAAMC,UAAU,GAAInB,EAAD,IAAQ;IACzB;IACA,MAAMkB,QAAQ,GAAGpB,KAAK,CAACsB,MAAN,CAAcC,IAAD,IAASA,IAAI,CAACrB,EAAL,KAAYA,EAAlC,CAAjB;IACAD,QAAQ,CAACmB,QAAD,CAAR;EACD,CAJD;;EAKE,oBAEF;IAAK,SAAS,EAAI,GAAEb,QAAQ,IAAI,WAAY,EAA5C;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE,QAAC,MAAD;QAAQ,oBAAoB,EAAEC;MAA9B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAQ,gBAAgB,EAAEF;MAA1B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,QAAD;QACA,KAAK,EAAEN,KAAK,CAACsB,MAAN,CAAcC,IAAD,IAClBA,IAAI,CAACpB,IAAL,CAAUqB,WAAV,GAAwBC,QAAxB,CAAiCpB,UAAjC,CADK,CADP;QAIE,aAAa,EAAEW,OAJjB;QAKE,gBAAgB,EAAEK;MALpB;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFE;AAiBD;;GAtEQtB,G;;KAAAA,G;AAwET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}